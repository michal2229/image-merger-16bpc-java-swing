/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor... 
 */

// This code is licensed under LGPL license.

package Merging;

import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.io.File;
import java.io.FilenameFilter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;

/**
 *
 * @author Michał Bokiniec
 */
public class OknoGlowne extends javax.swing.JFrame implements PropertyChangeListener {
    private static final long serialVersionUID = 1992032620201404230L;
    List<String> results = null;
    static String directoryName = "C:\\";
    File[] files = null;
    
    /**
     * Creates new form OknoGlowne
     * @throws java.io.IOException
     */
    public OknoGlowne() throws IOException {
        initComponents();
        directoryName = new javax.swing.JFileChooser().getCurrentDirectory().getCanonicalPath();
        jTextFieldWybierzFolder.setText(directoryName);
        wlaczPrzyciskiLiczenia(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFileChooser1 = new javax.swing.JFileChooser();
        buttonGroup1 = new javax.swing.ButtonGroup();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        PrzyciskWybierzFolder = new javax.swing.JButton();
        jProgressBarSrednia = new javax.swing.JProgressBar();
        jProgressBarTylkoJasniejsze = new javax.swing.JProgressBar();
        jProgressBarTylkoCiemniejsze = new javax.swing.JProgressBar();
        jTextFieldWybierzFolder = new javax.swing.JTextField();
        jButtonSrednia = new javax.swing.JButton();
        jButtonTylkoJasniejsze = new javax.swing.JButton();
        jButtonTylkoCiemniejsze = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextAreaKomunikat = new javax.swing.JTextArea();

        jFileChooser1.setAcceptAllFileFilterUsed(false);
        jFileChooser1.setApproveButtonText("Wybierz");
        jFileChooser1.setApproveButtonToolTipText("");
        jFileChooser1.setDialogTitle("Wybierz folder");
        jFileChooser1.setFileSelectionMode(javax.swing.JFileChooser.FILES_AND_DIRECTORIES);
        jFileChooser1.setMaximumSize(new java.awt.Dimension(1280, 720));
        jFileChooser1.setMinimumSize(new java.awt.Dimension(425, 400));
        jFileChooser1.setMultiSelectionEnabled(true);
        jFileChooser1.setPreferredSize(new java.awt.Dimension(560, 460));
        jFileChooser1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jFileChooser1ActionPerformed(evt);
            }
        });

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Uśredniacz obrazów");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setResizable(false);

        PrzyciskWybierzFolder.setBackground(new java.awt.Color(255, 153, 0));
        PrzyciskWybierzFolder.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        PrzyciskWybierzFolder.setText("Wybierz Folder");
        PrzyciskWybierzFolder.setToolTipText("Wybierz folder, z którego pliki graficzne mają być przetwarzane.");
        PrzyciskWybierzFolder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PrzyciskWybierzFolderActionPerformed(evt);
            }
        });

        jProgressBarSrednia.setString("");
        jProgressBarSrednia.setStringPainted(true);

        jProgressBarTylkoJasniejsze.setString("");
        jProgressBarTylkoJasniejsze.setStringPainted(true);

        jProgressBarTylkoCiemniejsze.setString("");
        jProgressBarTylkoCiemniejsze.setStringPainted(true);

        jTextFieldWybierzFolder.setEditable(false);
        jTextFieldWybierzFolder.setText("C:\\");
            jTextFieldWybierzFolder.setAutoscrolls(false);
            jTextFieldWybierzFolder.setFocusable(false);
            jTextFieldWybierzFolder.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jTextFieldWybierzFolderActionPerformed(evt);
                }
            });
            jTextFieldWybierzFolder.addKeyListener(new java.awt.event.KeyAdapter() {
                public void keyTyped(java.awt.event.KeyEvent evt) {
                    jTextFieldWybierzFolderKeyTyped(evt);
                }
            });

            jButtonSrednia.setText("Licz średnią");
            jButtonSrednia.setToolTipText("");
            jButtonSrednia.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jButtonSredniaActionPerformed(evt);
                }
            });

            jButtonTylkoJasniejsze.setText("Licz tylko jaśniejsze");
            jButtonTylkoJasniejsze.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jButtonTylkoJasniejszeActionPerformed(evt);
                }
            });

            jButtonTylkoCiemniejsze.setText("Licz tylko ciemniejsze");
            jButtonTylkoCiemniejsze.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jButtonTylkoCiemniejszeActionPerformed(evt);
                }
            });

            jTextAreaKomunikat.setEditable(false);
            jTextAreaKomunikat.setColumns(20);
            jTextAreaKomunikat.setFont(new java.awt.Font("Monospaced", 0, 12)); // NOI18N
            jTextAreaKomunikat.setLineWrap(true);
            jTextAreaKomunikat.setRows(5);
            jTextAreaKomunikat.setWrapStyleWord(true);
            jTextAreaKomunikat.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
            jScrollPane2.setViewportView(jTextAreaKomunikat);

            javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
            getContentPane().setLayout(layout);
            layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane2)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(PrzyciskWybierzFolder)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jTextFieldWybierzFolder))
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jButtonTylkoJasniejsze, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButtonTylkoCiemniejsze, javax.swing.GroupLayout.DEFAULT_SIZE, 147, Short.MAX_VALUE)
                                .addComponent(jButtonSrednia, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jProgressBarTylkoJasniejsze, javax.swing.GroupLayout.DEFAULT_SIZE, 497, Short.MAX_VALUE)
                                .addComponent(jProgressBarSrednia, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jProgressBarTylkoCiemniejsze, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addContainerGap())
            );
            layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(PrzyciskWybierzFolder, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jTextFieldWybierzFolder))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jButtonSrednia, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jProgressBarSrednia, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jProgressBarTylkoJasniejsze, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButtonTylkoJasniejsze))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jProgressBarTylkoCiemniejsze, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButtonTylkoCiemniejsze))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap())
            );

            pack();
            setLocationRelativeTo(null);
        }// </editor-fold>//GEN-END:initComponents

    private void PrzyciskWybierzFolderActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_PrzyciskWybierzFolderActionPerformed
    {//GEN-HEADEREND:event_PrzyciskWybierzFolderActionPerformed
        PrzyciskWybierzFolder.setEnabled(false);
        if (odczytajSciezke()) { // otwiera wybieracz folderu i odczytuje sciezke
            if (znajdzPliki()) {
                wlaczPrzyciskiLiczenia(true);
                jTextAreaKomunikat.append("\n\nZnaleziono " + results.size() + " obrazów.\n");
            }
            else {
                jTextAreaKomunikat.append("Nie ma, lub jest zbyt mało poprawnych plików, aby rozpocząć przetwarzanie.\n");
                wlaczPrzyciskiLiczenia(false);
            }
        }
        else jTextAreaKomunikat.append("Anulowano.\n");
        
        PrzyciskWybierzFolder.setEnabled(true);

    }//GEN-LAST:event_PrzyciskWybierzFolderActionPerformed

    private void jButtonSredniaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSredniaActionPerformed
        try {
            Przetwarzanie sr = new Przetwarzanie(results, directoryName, "_srednia");
            sr.addPropertyChangeListener(this);// tu odpalana jest funkcja
            sr.execute();
            jButtonSrednia.setEnabled(false);
        } catch (IOException ex) {
            System.err.println("Zdarzył się błąd 9685475.");
            Logger.getLogger(OknoGlowne.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButtonSredniaActionPerformed

    private void jButtonTylkoJasniejszeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonTylkoJasniejszeActionPerformed
        try {
            Przetwarzanie tj = new Przetwarzanie(results, directoryName, "_tylkoJasniejsze");
            tj.addPropertyChangeListener(this);// tu odpalana jest funkcja
            tj.execute();
            jButtonTylkoJasniejsze.setEnabled(false);
        } catch (IOException ex) {
            System.err.println("Zdarzył się błąd 4452145.");
            Logger.getLogger(OknoGlowne.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButtonTylkoJasniejszeActionPerformed

    private void jButtonTylkoCiemniejszeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonTylkoCiemniejszeActionPerformed
        try {
            Przetwarzanie tc = new Przetwarzanie(results, directoryName, "_tylkoCiemniejsze");
            tc.addPropertyChangeListener(this);// tu odpalana jest funkcja
            tc.execute();
            jButtonTylkoCiemniejsze.setEnabled(false);
        } catch (IOException ex) {
            Logger.getLogger(OknoGlowne.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButtonTylkoCiemniejszeActionPerformed

    private void jTextFieldWybierzFolderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldWybierzFolderActionPerformed
        directoryName = jTextFieldWybierzFolder.getText();
    }//GEN-LAST:event_jTextFieldWybierzFolderActionPerformed

    private void jTextFieldWybierzFolderKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldWybierzFolderKeyTyped
        directoryName = jTextFieldWybierzFolder.getText();
    }//GEN-LAST:event_jTextFieldWybierzFolderKeyTyped

    private void jFileChooser1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jFileChooser1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jFileChooser1ActionPerformed

    private boolean znajdzPliki(){    
        files = null;
        files = new File(directoryName).listFiles(new FilenameFilter() {
            @Override
            public boolean accept(File dir, String name) {
                boolean finalTif = name.toLowerCase().endsWith("final.tif");
                boolean finalTiff = name.toLowerCase().endsWith("final.tiff");
                boolean jpg = name.toLowerCase().endsWith("jpg");
                boolean jpeg = name.toLowerCase().endsWith("jpeg");
                boolean png = name.toLowerCase().endsWith("png");
                boolean bmp = name.toLowerCase().endsWith("bmp");
                boolean tif = name.toLowerCase().endsWith("tif");
                boolean tiff = name.toLowerCase().endsWith("tiff");
                
                return  (!( finalTif || finalTiff)) 
                        && 
                        (jpg || jpeg || png || bmp || tif || tiff);
            }
        });
        
        results = new ArrayList<>();
        for (File file : files) {                                       // dla kazdego pliku file w files
            if (file.isFile()) {
                try {
                    System.out.print("Znaleziono plik: "+file.getCanonicalPath());
                    jTextAreaKomunikat.append(file.getName()+ " ");
                    results.add(file.getCanonicalPath());
                } catch (IOException ex) {
                    System.err.println("Zdarzył się błąd 1542879.");
                    Logger.getLogger(OknoGlowne.class.getName()).log(Level.SEVERE, null, ex);
                }
            } else {
                jTextAreaKomunikat.append("1542879 Brak plików..\n");
                return false;
            }
        } 
        return (results.size()>=2);
    }
    
    private boolean odczytajSciezke(){
        //jFileChooser1.setCurrentDirectory(new java.io.File(directoryName)); // juz nie musi byc, bo pasek tekstowy nie jest edytowalny
        if (jFileChooser1.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) { // jesli wcisnieto OK      
            try {
                directoryName = jFileChooser1.getSelectedFile().getCanonicalPath();
                if (directoryName.matches(".*\\\\.+?\\..+?{3,4}$")) { // szukam sciezka\nazwa.roz lub sciezka\nazwa.rozz
                    System.out.println("Mamy do czynienia z plikiem " + directoryName);
                    directoryName = directoryName.replaceAll("(.*\\\\)(.+?\\..+?{3,4})($)", "$1$3");
                    System.out.println("Zmieniono na " + directoryName);
                }
                jTextFieldWybierzFolder.setText(directoryName);
                return true;
            } catch (IOException ex) { // ten blad wystepuje w przypadku 
                System.err.println("Wystąpił błąd: 6548523");
                Logger.getLogger(OknoGlowne.class.getName()).log(Level.SEVERE, null, ex);
                return false;
            }
            // znajdzPliki(); // skomentowalem, bo nie wiem czy sie tu nadal przyda
        } else {
            System.out.println("Anulowano.");
            return false;
        }
    }
    
    private void wlaczPrzyciskiLiczenia(boolean wartosc){
        jButtonSrednia.setEnabled(wartosc);
        jButtonTylkoJasniejsze.setEnabled(wartosc);
        jButtonTylkoCiemniejsze.setEnabled(wartosc);
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(OknoGlowne.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(OknoGlowne.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(OknoGlowne.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(OknoGlowne.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                try {
                    new OknoGlowne().setVisible(true);
                } catch (IOException ex) {
                    System.err.println("Wystąpił błąd: 5485125");
                    Logger.getLogger(OknoGlowne.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    } // wygenerowane automatycznie przez Swing Designer

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton PrzyciskWybierzFolder;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButtonSrednia;
    private javax.swing.JButton jButtonTylkoCiemniejsze;
    private javax.swing.JButton jButtonTylkoJasniejsze;
    private javax.swing.JFileChooser jFileChooser1;
    private javax.swing.JProgressBar jProgressBarSrednia;
    private javax.swing.JProgressBar jProgressBarTylkoCiemniejsze;
    private javax.swing.JProgressBar jProgressBarTylkoJasniejsze;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea jTextAreaKomunikat;
    private javax.swing.JTextField jTextFieldWybierzFolder;
    // End of variables declaration//GEN-END:variables

    @Override
    public void propertyChange(PropertyChangeEvent evt1) {
        System.out.println("Zdarzenie: " + evt1.getPropertyName() + " " + evt1.getNewValue());
        if (evt1.getPropertyName().contains("postep")){
            PrzyciskWybierzFolder.setEnabled(false);
            int postep = (int) evt1.getNewValue();
            switch (evt1.getPropertyName()){
                case "postep_srednia"           : {jProgressBarSrednia.setValue(postep);           if (postep==100) {jButtonSrednia.setEnabled(true);           jProgressBarSrednia.setValue(0);           } break;}
                case "postep_tylkoJasniejsze"   : {jProgressBarTylkoJasniejsze.setValue(postep);   if (postep==100) {jButtonTylkoJasniejsze.setEnabled(true);   jProgressBarTylkoJasniejsze.setValue(0);   } break;}
                case "postep_tylkoCiemniejsze"  : {jProgressBarTylkoCiemniejsze.setValue(postep);  if (postep==100) {jButtonTylkoCiemniejsze.setEnabled(true);  jProgressBarTylkoCiemniejsze.setValue(0);  } break;}
            } 
            if ((jProgressBarSrednia.getValue() + jProgressBarTylkoJasniejsze.getValue() + jProgressBarTylkoCiemniejsze.getValue()) == 0) PrzyciskWybierzFolder.setEnabled(true);
        } else {
            jTextAreaKomunikat.append("Zdarzenie: " + evt1.getPropertyName() + " " + evt1.getNewValue() + " \n");
        }
        
        if (evt1.getPropertyName().contains("wiadomosc")){
            String wiadomosc = (String) evt1.getNewValue();
            switch (evt1.getPropertyName()){
                case "wiadomosc"                   : jTextAreaKomunikat.append("\n"+wiadomosc);                                           break;
                case "wiadomosc_tylkoJasniejsze"   : {jProgressBarTylkoJasniejsze.setString(wiadomosc.replaceFirst("(.*:)(.+)", "$2")  ); break;}
                case "wiadomosc_tylkoCiemniejsze"  : {jProgressBarTylkoCiemniejsze.setString(wiadomosc.replaceFirst("(.*:)(.+)", "$2") ); break;}
            } 
        }
    } // tu reaguje na zmiane wartosci postepu, ustawiam pasek postepu
}
